@model FlightReservationsApplication.Utils.SeatIndexModel

@{
    ViewData["Title"] = "Index";
    var Seats = Model.Seats;
    var PageNumbers = Model.PageNumbers;
    var PagingInfo = Model.PagingInfo;
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Seats[0].SeatNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seats[0].IsAvailable)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seats[0].Flight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seats[0].Class.Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Seats[0].Class.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Seats) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SeatNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAvailable)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Flight.FlightID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Class.Number)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Class.Price)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.SeatID">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.SeatID">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.SeatID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<div class="flex flex-1 items-center justify-end">
    <span class="isolate inline-flex rounded-md mb-2 shadow-sm">
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="25" asp-route-pageNumber="@PagingInfo.CurrentPage" class="relative inline-flex items-center rounded-l-md border px-4 py-2 text-sm font-medium @(createClass(25))">25</a>
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="50" asp-route-pageNumber="@PagingInfo.CurrentPage" class="relative -ml-px inline-flex items-center border px-4 py-2 text-sm font-medium @(createClass(50))">50</a>
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="100" asp-route-pageNumber="@PagingInfo.CurrentPage" class="relative -ml-px inline-flex items-center border px-4 py-2 text-sm font-medium @(createClass(100))">100</a>
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="250" asp-route-pageNumber="@PagingInfo.CurrentPage" class="relative -ml-px inline-flex items-center border px-4 py-2 text-sm font-medium @(createClass(250))">250</a>
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="500" asp-route-pageNumber="@PagingInfo.CurrentPage" class="relative -ml-px inline-flex items-center rounded-r-md border px-4 py-2 text-sm font-medium @(createClass(500))">500</a>
    </span>
    <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm mx-2 mb-2" aria-label="Pagination">
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="@PagingInfo.ItemsPerPage" asp-route-pageNumber="@((PagingInfo.CurrentPage-1) < 1 ? 1 : (PagingInfo.CurrentPage-1) )" class="relative inline-flex items-center rounded-l-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20">
            <span class="sr-only">Previous</span>
            <heroicon kind="Mini" name="ChevronLeft" class="w-4" />
        </a>
        @foreach (int pageNumber in PageNumbers)
        {
            if (pageNumber == PagingInfo.CurrentPage)
            {
                <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="@PagingInfo.ItemsPerPage" asp-route-pageNumber="@pageNumber" class="relative z-10 inline-flex items-center border border-indigo-500 bg-indigo-50 px-4 py-2 text-sm font-medium text-indigo-600 focus:z-20" aria-current="page">@pageNumber</a>
            }
            else if (pageNumber == -1)
            {
                <span class="relative inline-flex items-center border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700">...</span>
            }
            else
            {
                <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="@PagingInfo.ItemsPerPage" asp-route-pageNumber="@pageNumber" class="relative inline-flex items-center border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20">@pageNumber</a>
            }
        }
        <a asp-controller="Seats" asp-action="Index" asp-route-pageSize="@PagingInfo.ItemsPerPage" asp-route-pageNumber="@((PagingInfo.CurrentPage+1 > PagingInfo.TotalPages) ? PagingInfo.TotalPages :( PagingInfo.CurrentPage+1))" class="relative inline-flex items-center rounded-r-md border border-gray-300 bg-white px-2 py-2 text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-20">
            <span class="sr-only">Next</span>
            <heroicon kind="Mini" name='ChevronRight' class="w-4" />
        </a>
    </nav>
</div>
@{
    string createClass(int currentSize)
    {
        if (currentSize != PagingInfo.ItemsPerPage)
        {
            return "border-gray-300 bg-white text-gray-700 hover:bg-gray-50 hover:border-gray-500";
        }
        return "border-indigo-500 bg-indigo-50 text-indigo-600 hover:border-indigo-500";
    }
}
